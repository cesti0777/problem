package samsung.review;

import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class P14503 {
	static int testCnt;
	static int answer;
	static int n;
	static int m;
	static int r;
	static int c;
	static int d;
	static int[][] map;
	
	final static int N = 0;
	final static int E = 1;
	final static int S = 2;
	final static int W = 3;
	
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		
		testCnt = in.nextInt();
		
		for(int testCase = 1; testCase <= testCnt; testCase++){
			
			init();
			
			n = in.nextInt();
			m = in.nextInt();
			r = in.nextInt();
			c = in.nextInt();
			d = in.nextInt();
			
			for(int i = 0; i < n; i++){
				for(int j = 0; j < m; j++){
					map[i][j] = in.nextInt();
				}
			}
				
			execute();
			
			System.out.println("#" + testCase + " " + answer);
			
		}
		
		
		
		
	}
	
	public static void init(){
		answer = n = m = r = c = d = 0;
		map = null;
		map = new int[50][50];
	}
	
	public static void execute(){
		Queue<Integer> q = new LinkedList<Integer>();
		
		q.add(r);
		q.add(c);
		q.add(d);
		
		int curR = 0;
		int curC = 0;
		int curD = 0;
		while(!q.isEmpty()){
			curR = q.remove();
			curC = q.remove();
			curD = q.remove();
			
			
			switch (curD) {
			case N:
				
				break;
				
			case E:
				break;
			case S:
				break;
			case W:
				break;

			default:
				break;
			}
		}
		
	}

}
