package problem.dfsbfs;

import java.util.Scanner;

public class P1697 {
	static boolean[] visited = new boolean[100];
	static int n;
	static int k;
	static int second = 100;

	public static void main(String args[]) {
		Scanner scanner = new Scanner(System.in);

		n = scanner.nextInt();
		k = scanner.nextInt();
		
		dfs(n, 0, visited);
		
		System.out.println(second);
	}

	public static void dfs(int cur, int sec, boolean[] visited) {
		visited[cur] = true;
		if(cur == k){
			second = Math.min(second, sec);
			return;
		}
		
		if(cur + 1 < 100 && !visited[cur + 1]){
			dfs(cur + 1, sec + 1, visited);
		}
		if(cur - 1 > 0 && !visited[cur - 1]){
			dfs(cur - 1, sec + 1, visited);
		}
		if(cur * 2 < 100 && !visited[cur * 2]){
			dfs(cur * 2, sec + 1, visited);
		}
	}
}
