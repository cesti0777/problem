package problem.if_;

import java.util.Scanner;

import javax.print.attribute.standard.MediaSize.NA;

public class p1110 {

	public static void main(String[] args) {
		//정수 받기
		//이전값 저장
		//연산
		//새로운값 생성
		//반복
		Scanner in = new Scanner(System.in);
		
		try{
			int n = in.nextInt();
			int cnt = 0;
			int[] nArray = new int[2];
			int meddleResult = 0;
			int[] newArray = new int[2];
			while(true){
				if(n < 10){
					nArray[0] = 0;
					nArray[1] = n;
				}else{
					nArray[0] = n/10;
					nArray[1] = n%10;
				}
				meddleResult = nArray[0] + nArray[1];
				
				if(meddleResult < 10){
					newArray[0] = 0;
					newArray[1] = meddleResult;
				}else{
					newArray[0] = meddleResult/10;
					newArray[1] = meddleResult%10;
				}
				nArray[0] = nArray[1]; 
				nArray[1] =	newArray[1];
				cnt++;
				if(nArray[0] * 10 + nArray[1] == n){
					System.out.println(nArray[0] * 10 + nArray[1]);
					break;
				}
				System.out.println(cnt);
			}
		}finally {
			in.close();
			in = null;
		}
	}

}
//문제
//0보다 크거나 같고, 99보다 작거나 같은 정수가 주어질 때 다음과 같은 연산을 할 수 있다. 먼저 주어진 수가 10보다 작다면 앞에 0을 붙여 두 자리 수로 만들고, 
//각 자리의 숫자를 더한다. 그 다음, 주어진 수의 가장 오른쪽 자리 숫자와 앞에서 구한 합의 가장 오른쪽 자리 숫자를 이어 붙이면 새로운 수를 만들 수 있다. 
//다음 예를 보자.
//
//26부터 시작한다. 2+6 = 8이다. 새로운 숫자는 68이다. 6+8 = 14이다. 새로운 숫자는 84이다. \
//8+4 = 12이다. 새로운 숫자는 42이다. 4+2 = 6이다. 
//새로운 숫자는 26이다.
//
//위의 예는 4번만에 원래 숫자로 돌아올 수 있다. 따라서 26의 사이클의 길이는 4이다.
//
//N이 주어졌을 때, N의 사이클의 길이를 구하는 프로그램을 작성하시오.
//
//입력
//첫째 줄에 N이 주어진다. N은 0보다 크거나 같고, 99보다 작거나 같은 정수이다.
//
//출력
//첫째 줄에 N의 사이클 길이를 출력한다.
//
//예제 입력  복사
//26
//예제 출력  복사
//4