package kj_ss;

import java.util.Scanner;

public class s2817 {
	static int n;
	static int k;
	static int t;
	static int[] arr;
	static int count;

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		t = sc.nextInt();
		for (int i = 0; i < t; i++) {
			n = sc.nextInt();
			k = sc.nextInt();
			arr = new int[n];
			int[] temp = new int[n];
			for (int j = 0; j < n; j++) {
				arr[j] = sc.nextInt();
			}
			for (int k = 1; k <= n; k++) {
				run(temp, 0, 0, k);
			}
		}
		System.out.println(count);
	}

	public static void run(int[] str, int start, int index, int cnt) {
		// start : 조합통 인덱스
		// index : 넣을 인덱스
		// cnt : 몇개 뽑을지
		// str : 조합통
		// sum : 현재까지의 합

		if (cnt == 0) { // 배열통이 꽉차면
			sum(str, start);
		}
		if (index == n) { // 배열의 모든 인덱스를 써먹었으면
			return;
		}

		str[start] = index; // 빈통의 start번째에 index를 하나 넣는다
		run(str, start + 1, index + 1, cnt - 1); // 뽑은 경우
		run(str, start, index + 1, cnt); // 안뽑은 경우
	}

	public static void sum(int[] str, int start) {
		int temp = 0;
		for (int i = 0; i < start; i++) {
			temp += arr[str[i]];
		}
		if (temp == k)
			count++;
	}

}
