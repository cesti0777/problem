package study;

import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class BJ14891 {

	static LinkedList<Integer> list1 = new LinkedList<>();
	static LinkedList<Integer> list2 = new LinkedList<>();
	static LinkedList<Integer> list3 = new LinkedList<>();
	static LinkedList<Integer> list4 = new LinkedList<>();
	static int orderCnt;
	static Queue<Integer> orders = new LinkedList<Integer>();

	public static void main(String[] args) {

		Scanner in = new Scanner(System.in);

		for (int i = 0; i < 8; i++) {
			list1.add(in.nextInt());
		}
		for (int i = 0; i < 8; i++) {
			list2.add(in.nextInt());
		}
		for (int i = 0; i < 8; i++) {
			list3.add(in.nextInt());
		}
		for (int i = 0; i < 8; i++) {
			list4.add(in.nextInt());
		}

		orderCnt = in.nextInt();

		for (int i = 0; i < orderCnt; i++) {
			orders.add(in.nextInt());
			orders.add(in.nextInt());
		}

		execute();// ½ÇÇà

	}

	public static void execute() {

		int tNum;
		int roDir;

		while (!orders.isEmpty()) {
			tNum = orders.remove();
			roDir = orders.remove();

			rotation(tNum, roDir);
		}
	}

	public static void rotation(int tNum, int roDir) {
		LinkedList<Integer> list;
		if(tNum == 1){
			list = list1;
		}else if(tNum == 2){
			list = list2;
		}else if(tNum == 3){
			list = list3;
		}else{
			list = list4;
		}
		
		if(roDir == 1){
			list.addFirst(list.removeLast());
		}else{
			
		}
	}
}
