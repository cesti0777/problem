package study;

import java.math.BigInteger;
import java.util.Scanner;

public class SE3260 {

	static int testCaseCnt;//testcase 개수
//	static BigInteger a, b;
//	static BigInteger answer;
	static double a, b;
	static String answer;

	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);

		testCaseCnt = in.nextInt();//testcase 개수 입력

		for (int testCase = 1; testCase <= testCaseCnt; testCase++) {
			
			a = in.nextDouble();
			b = in.nextDouble();
			answer = Double.toString(a + b);
			
			System.out.println("#" + testCase + " " + answer);
		}
	}
}

#include <stdio.h> 
#include <iostream>
#include <string.h> 
using namespace std;
#define StoD(X) (X==0? 0:X-'0') 
void reverse(char *arr, int len); 
int tc;
int main() {
   cin >> tc;
   for (int ii = 1; ii <= tc; ii ++ ) {
      char a[3][10002] = { 0 };
      int len, i, j, up = 0;
      scanf("%s %s", a[0],a[1]);

      if (strlen(a[0]) > strlen(a[1])) { // 최대 len 구한후. 
         len = strlen(a[0]);
      }
      else
         len = strlen(a[1]);

      reverse(a[0], strlen(a[0]));
      reverse(a[1], strlen(a[1]));
      for (i = 0; i <= len; i++) {
         a[2][i] = (StoD(a[0][i]) + StoD(a[1][i]) + up) % 10 + '0';

         if ((StoD(a[0][i]) + StoD(a[1][i]) + up) > 9)
            up = 1;
         else
            up = 0;
      }

      if (a[2][len] == '0')
         a[2][len] = 0;
      reverse(a[2], strlen(a[2]));

      cout << "#" << ii << " " << a[2] << endl;
   }
}


void reverse(char *arr, int len){ 
   char temp; 
   int i; 
   for(i=0; i<len/2; i++){
      temp=arr[i]; 
      arr[i]=arr[len-1-i]; 
      arr[len-1-i]=temp; 
   } 
}
